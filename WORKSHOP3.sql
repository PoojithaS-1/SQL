CREATE DATABASE DBS;
USE DBS;

CREATE TABLE PRODUCT(
P_ID INT AUTO_INCREMENT PRIMARY KEY,
P_NAME VARCHAR(50) NOT NULL ,
P_PRICE DECIMAL(10,2) NOT NULL,
P_RATING INT NOT NULL,
P_DESCRIPTION VARCHAR(100) NOT NULL);


INSERT INTO PRODUCT (P_NAME, P_PRICE, P_RATING, P_DESCRIPTION) VALUES
  ('Laptop', 999.99, 4, '15-inch HD display'),
  ('Smartphone', 699.99, 4, '6.1-inch AMOLED'),
  ('Headphones', 99.99, 5, 'Wireless noise-cancelling'),
  ('Tablet', 499.99, 4, '10-inch HD display'),
  ('Smartwatch', 299.99, 4, 'Heart rate monitoring'),
  ('Gaming Console', 399.99, 5, '4K resolution, 1TB storage'),
  ('Printer', 149.99, 4, 'Wireless printing design'),
  ('Camera', 799.99, 5, '24MP sensor, 4K video recording'),
  ('Speakers', 49.99, 4, 'Bluetooth connectivity water-resistant'),
  ('Gaming Mouse', 29.99, 5, 'Optical sensor');

CREATE TABLE CUSTOMER(
C_ID INT auto_increment PRIMARY KEY,
C_NAME VARCHAR(50) NOT NULL,
C_ADDRESS VARCHAR(50) NOT NULL,
C_EMAIL VARCHAR(100) NOT NULL,
C_PHONE VARCHAR(10) NOT NULL);

INSERT INTO CUSTOMER(C_NAME,C_ADDRESS,C_EMAIL,C_PHONE)VALUES 
('John Doe', '123 Main St', 'john.doe@example.com', '1234567890'),
  ('Jane Smith', '456 Elm St', 'jane.smith@example.com', '9876543210'),
  ('Bob Johnson', '789 Oak St', 'bob.johnson@example.com', '5551234567'),
  ('Alice Brown', '321 Maple St', 'alice.brown@example.com', '9012345678'),
  ('Mike Davis', '901 Pine St', 'mike.davis@example.com', '1112223333'),
  ('Emily Taylor', '234 Cedar St', 'emily.taylor@example.com', '4445556666'),
  ('David Lee', '567 Spruce St', 'david.lee@example.com', '7778889999'),
  ('Sarah Kim', '890 Walnut St', 'sarah.kim@example.com', '2223334444'),
  ('Kevin White', '345 Cherry St', 'kevin.white@example.com', '6667778888'),
  ('Lisa Nguyen', '678 Orange St', 'lisa.nguyen@example.com', '8889990000');


CREATE TABLE ORDER_DETAILS(
O_ID INT auto_increment primary key,
P_ID INT NOT NULL,
FOREIGN KEY (P_id ) REFERENCES PRODUCT(P_id),
C_ID INT NOT NULL,
FOREIGN KEY (C_id ) REFERENCES CUSTOMER(C_id));

INSERT INTO ORDER_DETAILS (P_ID, C_ID)VALUES 
(1, 1),
(2, 1),
(3, 2),
(4, 3),
(5, 4),
(1, 5),
(2, 1),
(3, 2),
(4, 3),
(5, 4);

SELECT *
FROM ORDER_DETAILS AS O,CUSTOMER AS C,PRODUCT AS P
WHERE O.O_ID=2 AND O.C_ID=C.C_ID AND O.P_ID=P.P_ID;

SELECT *
FROM ORDER_DETAILS AS O,CUSTOMER AS C,PRODUCT AS P
WHERE O.O_ID=2  AND O.C_ID=C.C_ID AND O.P_ID=P.P_ID AND C.C_NAME LIKE 'J%';

SELECT * FROM CUSTOMER WHERE C_NAME LIKE '%E';

SELECT * FROM CUSTOMER WHERE C_NAME LIKE 'B%';

SELECT * FROM CUSTOMER WHERE C_NAME LIKE '%L%';-- CONTAIN-- 

SELECT * FROM CUSTOMER WHERE C_NAME LIKE '_A%';

SELECT * FROM PRODUCT WHERE P_NAME LIKE '__P___';
-- INNER JOIN-- 
SELECT * FROM PRODUCT AS P 
INNER JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID;

SELECT * FROM PRODUCT AS P 
JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID;

SELECT * FROM PRODUCT AS P 
INNER JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID 
WHERE C.C_NAME LIKE'J%';

-- LEFT OUTER JOIN :ALL RECORDS FROM LEFT TABLE AND THE MATCHING RECORDS FROM RIGHT TABLE -- 
SELECT * FROM PRODUCT AS P 
LEFT JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID;

-- RIGHT OUTER JOIN :ALL RECORDS FROM RIGHT TABLE AND THE MATCHING RECORDS FROM LEFT TABLE -- 
SELECT * FROM PRODUCT AS P 
RIGHT JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID;

-- FULL OUTER JOIN : IT WILL GIVE ALL THE RECORDS-- 
SELECT * FROM PRODUCT AS P 
LEFT JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID
UNION
SELECT * FROM PRODUCT AS P 
RIGHT JOIN CUSTOMER AS C
ON P.P_ID=C.C_ID;

-- LIMITS:TILL WHERE WE HAVE TO DISPLAY RECORDS-- 
SELECT * FROM PRODUCT LIMIT 2;

-- OFFSET: USED TO SET THE STARTING POINT--
SELECT * FROM PRODUCT LIMIT 5 offset 2; 

SELECT *
FROM PRODUCT AS P
WHERE P.P_PRICE>=(
SELECT AVG(P.P_PRICE) FROM PRODUCT AS P);

SELECT AVG(P_PRICE) FROM PRODUCT;

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE O.P_ID=(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE P.P_ID=(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE P.P_ID =ANY(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE P.P_ID =ALL(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE P.P_ID =exists(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT * FROM ORDER_DETAILS AS O,PRODUCT AS P 
WHERE NOT exists(
SELECT P_ID FROM PRODUCT AS P
WHERE P.P_ID=3);

SELECT ascii(C_NAME)FROM CUSTOMER;
SELECT upper(C_NAME) FROM CUSTOMER;
SELECT LOWER(C_NAME) FROM CUSTOMER;
SELECT REVERSE(C_NAME) FROM CUSTOMER;

SELECT sysdate();

SELECT system_user();

SELECT YEAR('2024-09-10');
SELECT month('2024-09-10');
SELECT monthname('2024-09-10');
SELECT DAY('2024-09-10');
SELECT dayname('2024-09-10');

-- VIEW IS A LOGICAL ENTITY.IT IS USED FOR MODIFICATION-- 

CREATE VIEW VIEW_CUSTOMER
AS SELECT C_NAME,C_PHONE FROM CUSTOMER;

SELECT * FROM VIEW_CUSTOMER;

INSERT INTO VIEW_CUSTOMER VALUES("POOJITHA","9876543210");
INSERT INTO CUSTOMER(C_NAME,C_ADDRESS,C_EMAIL,C_PHONE)VALUES 
('John', ' Main St', 'john.@example.com', '1298567890');
UPDATE VIEW_CUSTOMER SET  C_NAME="POOJA" WHERE C_PHONE="9876543210";
SET SQL_SAFE_UPDATES=0;

SELECT * FROM VIEW_CUSTOMER WHERE C_NAME LIKE "%A%";
DROP VIEW VIEW_CUSTOMER;
